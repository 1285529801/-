v-text和v-html专门用来展示数据, 其作用和插值表达式类似。v-text和v-html可以避免插值闪烁问题.
Vue v-text 指令与 v-html 指令唯一不同在于，v-text 指令将数据解析为纯文本，而 v-html 指令是可以解析 html 的。
​ 当网速比较慢时, 使用{{}}来展示数据, 有可能会产生插值闪烁问题。

​ 插值闪烁: 在数据未加载完成时，页面会显示出原始的{{}}, 过一会才会展示正常数据.

.stop ：阻止事件冒泡, 也就是当前元素发生事件,但当前元素的父元素不发生该事件
.prevent ：阻止默认事件发生
.capture ：使用事件捕获模式, 主动获取子元素发生事件, 把获取到的事件当自己的事件执行
.self ：只有元素自身触发事件才执行。（冒泡或捕获的都不执行）
.once ：只执行一次

子组件无法直接给父组件传递数据. 也无法操作父组件中的数据, 更无法调用父组件中的方法.

所以, 所谓的子组件向父组件通讯, 其实就是想办法让子组件调用父组件的方法. 进而响应到父组件中的数据.

安装node.js
安装淘宝镜像
在每次建一个项目前，要重新下一个vue-cli，输入：cnpm install vue-cli -g
第一步：在命令行输入"vue init webpack 项目名" 
              然后一路选no（为了体验手动安装）
第二部：在项目的文件夹里，用cmd命令输入”npm install“  安装依赖

第三部：用vscode打开，接着在命令行输入”npm run dev“ 启动项目
             系统会进行打包webpack

component里面放代码，assets里放图片

exports用来暴露数据或者方法，在主页面则用require（"./页面"）来引入类似接口传输，由一个页面传到另一个页面

webpack.config.js文件里 用"module.exports"来打包 '主页面'
module.exports ={
      entry: './主页面'	
      output: {
	filename: "./js/bundle.js"   //输出生成名为”bundle“的文件
 	}
}

在index.html文件里在 <script>标签中引入bundle文件。

vue -router路由，用于页面跳转
在配置路由时，组件component：后面写的是组件名，不能加‘’或者“”，不然会识别成字符串，页面会一片空白

每个vue文件都是一个组件
在vue文件里  打上”vue“后按下Tab键可以初始化一些代码


vue数据渲染：
简单渲染
1.首先在 data（） 中定义需要渲染的字段并赋值 
2.其次，用已经定义的字段，将其渲染在页面上。

组件在路由的index下配置，但是整个项目接口只有main.js最终还是要在这显示

vue里面用router-link来设置链接，相当于HTML里的a标签
router-view 将显示与 url 对应的组件。你可以把它放在任何地方，以适应你的布局。
router-link 实现路由之间的跳转
router-view 当你的路由path 与访问的地址相符时，会将指定的组件替换该 router-view